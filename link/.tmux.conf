# PREFIX
set -g prefix2 C-a                 # GNU-Screen compatible prefix
bind C-a send-prefix -2            # set prefix as 2nd option

# GENERAL
set -gq status-utf8 on             # Expect UTF-8 (tmux < 2.2)
set -gq utf8 on
set -s  escape-time 0              # Fastest command sequences
set -gs repeat-time 600            # Increase repeat timeout
set -gs focus-events on
set -g  status-interval 2          # Update status frequently
set -g  history-limit 50000        # Increase history size
set -g  mouse on                   # Enable mouse mode
set -g  renumber-windows on        # Renumber windows whenever any window is closed

setw -g xterm-keys on
setw -g aggressive-resize on

# https://github.com/tmux/tmux/issues/435#issuecomment-226849415
# http://joehanchoi.com/quick-fixes-for-tmux-2-1-on-osx/
set -g  default-terminal   "tmux-256color"              # Color and italics!
set -as terminal-overrides ',xterm*:sitm=\E[3m'         # OS X only?

# start windows and pane index at 1 not 0
set  -g base-index 1
setw -g pane-base-index 1


# change some bindings.
# src: https://blog.hawkhost.com/2010/07/02/tmux/#comment-1234
# split re-binding
bind s split-window -v
bind v split-window -h

# use the vim motion keys to move between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# use the vim resize keys.
# the number at the end is how much the pane will be resized,
# and 1 is fairly small -- you might want to tweak this.
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# status bar colors
set -g status-bg green
set -g status-fg black
set -g pane-active-border-style fg=brightblue      # border of active pane
set -g status-right "#[bg=yellow]%A, %b %d, %Y %I:%M %p" # include time in status-right

# Set window notifications
set-window-option -g monitor-activity on
set-option 	  -g visual-activity  on
set-window-option -g window-status-current-style  bg=brightblue
set-window-option -g window-status-activity-style bg=brightred



# vim-tmux integration helper
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Ctrl-Left/Right/Up/Down              Move focus among splits
bind-key -n C-Up    if "$is_vim" "send C-Up"    "select-pane -U"
bind-key -n C-Down  if "$is_vim" "send C-Down"  "select-pane -D"
bind-key -n C-Left  if "$is_vim" "send C-Left"  "select-pane -L"
bind-key -n C-Right if "$is_vim" "send C-Right" "select-pane -R"
# Ctrl-\                               Last pane
bind-key -n C-\     if "$is_vim" "send C-\\"    "select-pane -l"

# Alt-Up                               Zoom pane in/out
bind-key -n M-Up resize-pane -Z

# Alt-,/.                              Move focus among windows
bind-key -n M-, select-window -p       # previous window
bind-key -n M-. select-window -n       # next window

# Alt-[/]                              Move focus among sessions
bind-key -n M-[ switch-client -p
bind-key -n M-] switch-client -n

# Alt-Shift-Left/Right/Up/Down         Create a new split in the given direction
bind-key -n M-S-Left                   split-window -h -c "#{pane_current_path}" \; swap-pane -s :. -t :.- \; select-pane -t :.- \; display-panes
bind-key -n M-S-Up                     split-window -v -c "#{pane_current_path}" \; swap-pane -s :. -t :.- \; select-pane -t :.- \; display-panes
bind-key -n M-S-Right display-panes \; split-window -h -c "#{pane_current_path}"
bind-key -n M-S-Down  display-panes \; split-window -v -c "#{pane_current_path}"


# Shift-Up                             Enter scrollback mode
bind-key -n S-Up    if "$is_vim" "send S-Up" "copy-mode"
# Shift-Up/Down                        Copy mode: scroll up/down a half-page at a time
bind-key -T copy-mode-vi S-Up   send -X halfpage-up
bind-key -T copy-mode-vi S-Down send -X halfpage-down
# bind-key -T copy-mode-vi
# bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "$clipboard_copy_command"

# Shift-F1
bind-key -n S-F1 new-window -k -n "tmux help" "man tmux"

# # F2                                   New window
# bind-key -n F2 command-prompt -p \
#   "[New window] Enter name or Ctrl-C to cancel:" \
#   "new-window -c '#{pane_current_path}'; run-shell 'a=%%; tmux rename-window \${a:--}'"

# Shift-F2                             Rename window
bind-key -n S-F2 command-prompt -p \
  "[Rename window] Enter name or Ctrl-C to cancel (current=#W):" \
  "run-shell 'a=%%; tmux rename-window \${a:-#W}'"

# # F3                                   New session
# bind-key -n F3 command-prompt -p \
#   "[New session] Enter name or Ctrl-C to cancel:" \
#   "new-session; run-shell 'a=%%; tmux rename-session \${a:--}'"
# # Shift-F3                             Rename session
# bind-key -n S-F3 command-prompt -p \
#   "[Rename session] Enter name or Ctrl-C to cancel (current=#S):" \
#   "run-shell 'a=%%; tmux rename-session \${a:-#S} || true'"


# # Alt-F3                          Expand pane to a full window
# bind-key -n M-F3 break-pane
# # Ctrl-F3                         Join window into a vertical split
# bind-key -n C-F3 join-pane -h -s :. -t :-1


# Ctrl-Shift-Left/Right                Swap the current split with another
bind-key -n C-S-Left  display-panes \; swap-pane -s :. -t :.- \; select-pane -t :.-
bind-key -n C-S-Right display-panes \; swap-pane -s :. -t :.+ \; select-pane -t :.+

# Ctrl-Shift-Up                        Balance panes horizontally
bind-key -n C-S-Up display-panes \; select-layout even-horizontal


# F3/F4                                Move focus among windows
bind-key -n C-F3 previous-window
bind-key -n C-F4 next-window
# Shift-F3/F4                          Move focus among splits
bind-key -n S-F3 display-panes \; select-pane -t :.-
bind-key -n S-F4 display-panes \; select-pane -t :.+
# Ctrl-Shift-F3/F4                     Move a window
bind-key -n C-S-F3 swap-window -t :-1
bind-key -n C-S-F4 swap-window -t :+1

#    Alt-F9                       Toggle sending keyboard input to all splits
bind-key -n M-F9 display-panes \; set-window-option synchronize-panes



# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'

set -g @yank_action 'copy-pipe'

set -g @sidebar-tree-command 'tree -C -a -I ".cache|.git*" -L 10 --filelimit 30'

set -g @continuum-boot 'on'
set -g @continuum-restore 'on'
set -g @continuum-boot-options 'iterm'
set -g @continuum-save-interval '30'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
